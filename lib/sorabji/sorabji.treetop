grammar Sorabji
  rule statement
    (operation / value_entity)* <Sorabji::StatementNode>
  end

  rule entity
    ( operation / value_entity / identifier / operator / space )
  end

  rule value_entity
    ( brackets / reference_object_identifier / object_identifier / integer )
  end
  
  rule operation
    left:value_entity operator:operator right:(operation / value_entity) <Sorabji::OperationNode>
  end

  rule reference_object_identifier
    '{' ident:object_identifier '}' <Sorabji::ReferenceObjectIdentifierNode>
  end

  rule object_identifier
    '{' ident:( identifier / integer ) '}' <Sorabji::ObjectIdentifierNode>
  end

  rule brackets
    '(' content:( entity / operation ) ')' <Sorabji::BracketedNode>
  end

  rule integer
    [0-9]+ <Sorabji::IntegerLiteralNode>
  end

  rule identifier
    [a-z_]+ <Sorabji::IdentifierNode>
  end

  rule operator
    space* [+-/*] space* <Sorabji::OperatorNode>
  end

  rule space
    [\s]+
  end
end
